{
  "Dockerfile": "# Creating multi-stage build for production\nFROM {{node_version}}{% if alpine %}-alpine{% endif %} AS build\n{% if alpinePackages %}\nRUN apk update && apk add --no-cache {{alpinePackages}} > /dev/null 2>&1\n{% endif %}\nENV NODE_ENV={{node_env}}\n\nWORKDIR /opt/\nCOPY package.json yarn.lock ./\n{% if build_packages %}\nRUN yarn global add {{build_packages}}\n{% endif %}\nRUN yarn config set network-timeout 600000 -g && yarn install --{{node_env}}\nENV PATH /opt/node_modules/.bin:$PATH\nWORKDIR /opt/app\nCOPY . .\nRUN yarn build\n\n# Creating final production image\nFROM {{node_version}}{% if alpine %}-alpine{% endif %}\nRUN apk add --no-cache {{production_packages}}\nENV NODE_ENV={{node_env}}\nWORKDIR /opt/\nCOPY --from=build /opt/node_modules ./node_modules\nWORKDIR /opt/app\nCOPY --from=build /opt/app ./\nENV PATH /opt/node_modules/.bin:$PATH\n\nRUN chown -R {{user}}:{{user}} /opt/app\nUSER {{user}}\nEXPOSE {{port}}\nCMD [\"yarn\", \"start\"]"
}