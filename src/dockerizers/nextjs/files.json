{
  "Dockerfile.njk": "FROM {{ nodeImage }} AS base\n\n# Install dependencies only when needed\nFROM base AS deps\n# Check https://github.com/nodejs/docker-node/tree/b4117f9333da4138b03a546ec926ef50a31506c3#nodealpine to understand why libc6-compat might be needed.\n{% if alpinePackages -%}\nRUN apk add --no-cache {{ alpinePackages }}\n{%- endif %}\nWORKDIR /app\n\n# Install dependencies based on the preferred package manager\nCOPY package.json yarn.lock* package-lock.json* pnpm-lock.yaml* ./\nRUN \\\n    if [ -f yarn.lock ]; then yarn --frozen-lockfile; \\\n    elif [ -f package-lock.json ]; then npm ci; \\\n    elif [ -f pnpm-lock.yaml ]; then yarn global add pnpm && pnpm i --frozen-lockfile; \\\n    else echo \"Lockfile not found.\" && exit 1; \\\n    fi\n\n\n# Rebuild the source code only when needed\nFROM base AS builder\nWORKDIR /app\nCOPY --from=deps /app/node_modules ./node_modules\nCOPY . .\n\n# Next.js collects completely anonymous telemetry data about general usage.\n# Learn more here: https://nextjs.org/telemetry\n# Uncomment the following line in case you want to disable telemetry during the build.\n{% if telemetry %}\n# ENV NEXT_TELEMETRY_DISABLED 1\n{% else %}\nENV NEXT_TELEMETRY_DISABLED 1\n{% endif %}\n\nRUN yarn build\n\n# If using npm comment out above and use below instead\n# RUN npm run build\n\n# Production image, copy all the files and run next\nFROM base AS runner\nWORKDIR /app\n\nENV NODE_ENV production\n# Uncomment the following line in case you want to disable telemetry during runtime.\n{% if telemetry %}\n# ENV NEXT_TELEMETRY_DISABLED 1\n{% else %}\nENV NEXT_TELEMETRY_DISABLED 1\n{% endif %}\n\n\nRUN addgroup --system --gid 1001 {{group}}\nRUN adduser --system --uid 1001 {{user}}\n\nCOPY --from=builder /app/public ./public\n\n# Set the correct permission for prerender cache\nRUN mkdir .next\nRUN chown nextjs:nodejs .next\n\n# Automatically leverage output traces to reduce image size\n# https://nextjs.org/docs/advanced-features/output-file-tracing\nCOPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./\nCOPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static\n\nUSER nextjs\n\nEXPOSE {{port}}\n\nENV PORT {{port}}\n# set hostname to localhost\nENV HOSTNAME \"{{host}}\"\n\n# server.js is created by next build from the standalone output\n# https://nextjs.org/docs/pages/api-reference/next-config-js/output\nCMD [\"node\", \"server.js\"]"
}